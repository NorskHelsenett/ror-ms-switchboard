name: Build ms-switchboard

on:
  push:
    branches:
      - main
    # Publish semver tags as releases.
    #tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - main


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  # test
  IMAGE_NAME: norskhelsenett/ror-ms-switchboard
  GH_TOKEN: ${{ secrets.VARTOKEN }}

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      ror_version: ${{ steps.set_version.outputs.ror_version }}
    steps:
      - uses: actions/checkout@v4
      - id: set_version
        run: |
            PREV_VERSION=$(gh variable get V1VERSION)
            ROR_VERSION=$(echo $PREV_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
            echo "ror_version=$ROR_VERSION" >> "$GITHUB_OUTPUT"
            gh variable set V1VERSION --body $ROR_VERSION
            echo "version bumped from $PREV_VERSION to $ROR_VERSION"
  build-app:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build
      run: |
        echo $ROR_VERSION
        go get ./...
        mkdir -p dist/isbuilt
        CGO_ENABLED=0 go build -o dist/ms-switchboard -ldflags "-w -extldflags '-static' -X internal/switchboardconfig.version=$ROR_VERSION -X internal/switchboardconfig.commit=$CI_COMMIT_SHORT_SHA" cmd/ms-switchboard/main.go
        touch dist/isbuilt/ms-switchboard
      env:
        ROR_VERSION: ${{ needs.bump-version.outputs.ror_version }}

    - name: Archive binary
      uses: actions/upload-artifact@v4
      with:
        name: binary-build
        path: |
          dist/ms-switchboard
          dist/isbuilt/ms-switchboard
        retention-days: 1


  build-container-image:
    runs-on: ubuntu-latest
    #if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    needs: 
      - build-app
      - bump-version
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download binary build artifacts
        uses: actions/download-artifact@v4

      - name: Move artifacts
        run: |
          mv binary-build dist

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.ROR_VERSION }}
        env:
          ROR_VERSION: ${{ needs.bump-version.outputs.ror_version }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
  publish-helm:
    runs-on: ubuntu-latest
    needs: 
      - bump-version
      - build-container-image
    env:
      ROR_VERSION: ${{ needs.bump-version.outputs.ror_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install helm
        uses: azure/setup-helm@v1
        with:
          version: v3.15.0
      
      - name: install-yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && mv ${BINARY} yq && chmod +x yq
        env:
          VERSION: v4.44.5
          BINARY: yq_linux_amd64
      
      - name: Build helm chart
        run: |
          ./yq e -i '.version = strenv(ROR_VERSION),.appVersion = strenv(ROR_VERSION)' charts/ms-switchboard/Chart.yaml
          ./yq e -i '.image.tag = strenv(ROR_VERSION)' charts/ms-switchboard/values.yaml
          ./yq e -i '.image.repository = "ghcr.io/norskhelsenett/ror-ms-switchboard"' charts/ms-switchboard/values.yaml
          helm package charts/ms-switchboard
          echo  ${{ secrets.GITHUB_TOKEN }} | helm registry login -u ${{ github.actor }} ${{ env.REGISTRY }} --password-stdin
          helm push ror-ms-switchboard-${ROR_VERSION}.tgz oci://${{ env.REGISTRY }}/norskhelsenett/helm/

